{
    "exportFormatVersion": 2,
    "exportTime": "2017-10-24 14:00:22",
    "containerVersion": {
        "path": "accounts/263956808/containers/2187362/versions/0",
        "accountId": "263956808",
        "containerId": "2187362",
        "containerVersionId": "0",
        "container": {
            "path": "accounts/263956808/containers/2187362",
            "accountId": "263956808",
            "containerId": "2187362",
            "name": "Packs - Complete Pack",
            "publicId": "GTM-5SXXR6",
            "usageContext": [
                "WEB"
            ],
            "fingerprint": "1508853601923",
            "tagManagerUrl": "https://tagmanager.google.com/#/container/accounts/263956808/containers/2187362/workspaces?apiLink=container"
        },
        "tag": [
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "32",
                "name": "CU - AJAX Listener - LunaMetrics Plugin",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script id=\"gtm-jq-ajax-listen\" type=\"text/javascript\">\n  (function() {\n\n    'use strict';\n\tvar $;\n    var n = 0;\n    init();\n\n    function init(n) {\n\n      // Ensure jQuery is available before anything\n      if (typeof jQuery !== 'undefined') {\n\t\t\n        // Define our $ shortcut locally\n        $ = jQuery;\n        bindToAjax();\n\n      // Check for up to 10 seconds\n      } else if (n < 20) {\n\t\n        n++;\n        setTimeout(init, 500);\n\n      }\n\n    }\n\n    function bindToAjax() {\n\n      $(document).bind('ajaxComplete', function(evt, jqXhr, opts) {\n\n        // Create a fake a element for magically simple URL parsing\n        var fullUrl = document.createElement('a');\n        fullUrl.href = opts.url;\n\n        // IE9+ strips the leading slash from a.pathname because who wants to get home on time Friday anyways\n        var pathname = fullUrl.pathname[0] === '/' ? fullUrl.pathname : '/' + fullUrl.pathname;\n        // Manually remove the leading question mark, if there is one\n        var queryString = fullUrl.search[0] === '?' ? fullUrl.search.slice(1) : fullUrl.search;\n        // Turn our params and headers into objects for easier reference\n        var queryParameters = objMap(queryString, '&', '=', true);\n        var headers = objMap(jqXhr.getAllResponseHeaders(), '\\n', ':');\n\n        // Blindly push to the dataLayer because this fires within GTM\n        dataLayer.push({\n          'event': 'ajaxComplete',\n          'attributes': {\n            // Return empty strings to prevent accidental inheritance of old data\n            'type': opts.type || '',\n            'url': fullUrl.href || '',\n            'queryParameters': queryParameters,\n            'pathname': pathname || '',\n            'hostname': fullUrl.hostname || '',\n            'protocol': fullUrl.protocol || '',\n            'fragment': fullUrl.hash || '',\n            'statusCode': jqXhr.status || '',\n            'statusText': jqXhr.statusText || '',\n            'headers': headers,\n            'timestamp': evt.timeStamp || '',\n            'contentType': opts.contentType || '',\n            // Defer to jQuery's handling of the response\n            'response': (jqXhr.responseJSON || jqXhr.responseXML || jqXhr.responseText || '')\n          }\n        });\n\n      });\n\n    }\n\n    function objMap(data, delim, spl, decode) {\n\n      var obj = {};\n\n      // If one of our parameters is missing, return an empty object\n      if (!data || !delim || !spl) {\n\n        return {};\n\n      }\n\n      var arr = data.split(delim);\n      var i;\n\n      if (arr) {\n\n        for (i = 0; i < arr.length; i++) {\n\n          // If the decode flag is present, URL decode the set\n          var item = decode ? decodeURIComponent(arr[i]) : arr[i];\n          var pair = item.split(spl);\n\n          var key = trim_(pair[0]);\n          var value = trim_(pair[1]);\n\n          if (key && value) {\n\n            obj[key] = value;\n\n          }\n\n        }\n\n      }\n\n      return obj;\n\n    }\n\n    // Basic .trim() polyfill\n    function trim_(str) {\n\n      if (str) {\n\n        return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n      }\n\n    }\n\n\n  })();\n  /*\n   * v0.1.0\n   * Created by the Google Analytics consultants at http://www.lunametrics.com\n   * Written by @notdanwilkerson\n   * Documentation: http://www.lunametrics.com/blog/2015/08/27/ajax-event-listener-google-tag-manager/\n   * Licensed under the Creative Commons 4.0 Attribution Public License\n   */\n</script>"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1494008053870",
                "firingTriggerId": [
                    "2147479553"
                ],
                "parentFolderId": "20",
                "tagFiringOption": "ONCE_PER_EVENT"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "33",
                "name": "CU - Cookie Remover - LunaMetrics Plugin",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script type=\"text/javascript\" id=\"gtm-cookie-remover\">\n  /*\n   * Cookie Remover\n   * Script for remving cookies within GTM using Custom HTML Tags\n   *\n   * Instructions:\n   * To remove a cookie, create a Custom HTML Tag that pushes data about\n   * the cookie into the dataLayer.\n   *\n   * <script>\n   * dataLayer.push({\n   *   'event': 'removeCookie',\n   *   'attributes': {\n   *     'cookieName': 'myCookie',       // Required.\n   *     'cookiePath': '/',              // Opt. Defaults to '/'. Must match stored cookie.\n   *     'cookieDomain': 'example.com',  // Opt. Defaults to hostname of page. Must match stored cookie.\n   *   }\n   * });\n   * <\\/script>\n   *\n   * If the cookie doesn't appear to be removed, check the path and hostname of the\n   * stored cookie, as these values must match in order to successfully remove it.\n   */\n  (function(document) {\n\n\tvar attributes = {{DLV - attributes - v1}};\n    var cookieName    = attributes.cookieName;  // Name of the cookie; preferred syntax is all lowercase, with no spaces\n    var cookieDomain  = attributes.cookieDomain;  // Hostname cookie is stored on\n    var cookiePath    = attributes.cookiePath; // Path cookie is stored at.\n        \n    if(typeof cookieName !== 'undefined') {\n       \n        document.cookie = cookieName + '=; Expires=Thu, 01 Jan 1970 00:00:01 GMT'\n                        + (cookieDomain ? '; Domain=' + cookieDomain : '') \n                        + (cookiePath ? '; Path=' + cookiePath : '');\n        \n    }\n    \n  })(document);\n  /*\n   * v1.0.0\n   * Created by the Google Analytics consultants at http://www.lunametrics.com\n   * Written by @notdanwilkerson\n   * Licensed under the MIT License\n   */\n</script>"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1502395572477",
                "firingTriggerId": [
                    "29"
                ],
                "parentFolderId": "22",
                "tagFiringOption": "ONCE_PER_EVENT"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "34",
                "name": "CU - Cookie Setter - LunaMetrics Plugin",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script type=\"text/javascript\" id=\"gtm-cookie-setter\">\n  /*\n   * Cookie Setter\n   * Script for setting cookies within GTM using Custom HTML Tags\n   *\n   * Instructions:\n   * To set a cookie, create a Custom HTML Tag that pushes data about\n   * the cookie into the dataLayer.\n   *\n   * <script>\n   * dataLayer.push({\n   *   'event': 'setCookie',\n   *   'attributes': {\n   *     'cookieName': 'myCookie',        // Required.\n   *     'cookieValue': '12345',          // Required.\n   *     'cookiePath': '/',               // Opt. Defaults to '/'.\n   *     'cookieDomain': 'example.com',  // Opt. Defaults to hostname of page\n   *     'cookieExpires': 30              // Opt. Set in days. Default is after browser closes.\n   *   }\n   * });\n   * <\\/script>\n   *\n   * For 99% of uses cases, cookiePath should be '/', and cookieDomain should be\n   * 'domainname.tld', e.g. for 'shop.example.com' you would use 'example.com'.\n   * If you need the cookie to expire in less than a day, provide a fraction\n   * or division for cookieExpires, e.g. a 30 minute expiration would be: 1 / 48\n   */\n  (function(document) {\n\n    var attributes = {{DLV - attributes - v1}};\n    var cookieName    = attributes.cookieName;  // Name of the cookie; preferred syntax is all lowercase, with no spaces\n    var cookieValue   = encodeURIComponent(attributes.cookieValue);  // The value stored with the cookie. Is automatically encoded. Check 'Decode cookie value' when using with 1st Party Cookie Variable\n    var cookieExpires = parseFloat(attributes.cookieExpires);  // Expiration length in terms of days. Defaults to expiring when the browser closes. Can accept a fraction for > 1 day time periods, e.g. 1/48 (30 minutes)\n    var cookieDomain  = attributes.cookieDomain;  // Hostname to store the cookie on. Defaults to browser handling.\n    var cookiePath    = attributes.cookiePath || '/'; // Path to store cookie at. Defaults to '/'.\n        \n    var expirationDate = '';\n\n    if(!isNaN(cookieExpires) && cookieExpires !== 0) {\n\n      expirationDate = \"; Expires=\" + new Date(+new Date() + 1000 * 60 * 60 * 24 * cookieExpires).toGMTString();\n\n    }\n\n    if(typeof cookieName !== 'undefined' && typeof cookieValue !== 'undefined') {\n\n      document.cookie = cookieName + '=' +\n                        cookieValue +\n                        expirationDate +\n                        (cookieDomain ? '; Domain=' + cookieDomain : '') +\n                        (cookiePath ? '; Path=' + cookiePath  : '');\n\n    }\n    \n  })(document);\n  /*\n   * v1.0.0\n   * Created by the Google Analytics consultants at http://www.lunametrics.com\n   * Written by @notdanwilkerson\n   * Licensed under the MIT License\n   */\n</script>"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1502395572478",
                "firingTriggerId": [
                    "31"
                ],
                "parentFolderId": "22",
                "tagFiringOption": "ONCE_PER_EVENT"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "30",
                "name": "CU - Scroll Tracking - LunaMetrics Plugin",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script type=\"text/javascript\" id=\"gtm-scroll-tracking\">\n/**\n * Emits events based on scrolling behavior in a given context. Shouldn't\n * be called until after DOMReady.\n *\n * @example\n * var scrollTracker = ScrollTracker({\n *   context: '#content'\n * });\n *\n * scrollTracker.on({\n *   percentage: {\n *    every: [25]\n *   }\n * }, function(evt) {\n *\n *   // Will trigger when the user reaches 25, 50, 75, & 100% depth\n *   notifySomeService(evt.data.scrollDepth);\n *\n * });\n *\n * Copyright(c) 2017 LunaMetrics, LLC.\n * Written by @notdanwilkerson\n * Licensed under the MIT License\n * For full license text, visit https://opensource.org/licenses/MIT\n */\n(function(window) {\n\n  'use strict';\n  // Won't work on IE8, so we install a mock.\n  if (window.navigator.userAgent.match(/MSIE [678]/gi)) return installMock();\n\n  var document = window.document;\n\n  /**\n   * @constructor\n   *\n   * @param {object} [opts] options for the constructor\n   * @param {HTMLElement} [opts.context] defaults to <body>\n   * @param {number} [opts.minHeight] minimum height of context required to track\n   *\n   * @returns {ScrollTracker}\n   */\n  function ScrollTracker(opts) {\n\n    if (!(this instanceof ScrollTracker)) return new ScrollTracker(opts);\n\n    opts = opts || {};\n\n    var context = opts.context || 'body';\n\n    if (typeof context === 'string') context = document.querySelector(context);\n\n    if (!context) throw new Error('Unable to find context ' + context);\n\n    this._context = context;\n    this.minHeight = opts.minHeight || 0;\n    this._marks = {};\n    this._tracked = {};\n    this._config = {\n      percentages: {\n        each: {},\n        every: {}\n      },\n      pixels: {\n        each: {},\n        every: {}\n      },\n      elements: {\n        each: {},\n        every: {}\n      }\n    };\n\n    var boundAndThrottledDepthCheck = throttle(this._checkDepth.bind(this), 500);\n    var boundUpdate = this._update.bind(this);\n    var throttledUpdate = throttle(boundUpdate, 500);\n\n    window.addEventListener('scroll', boundAndThrottledDepthCheck, true);\n    window.addEventListener('resize', throttledUpdate);\n\n    this._artifacts = {\n      timer: onDocHeightChange(boundUpdate),\n      resize: throttledUpdate,\n      scroll: boundAndThrottledDepthCheck\n    };\n\n  }\n\n  /**\n   * Cleans up timer and event bindings\n   */\n  ScrollTracker.prototype.destroy = function() {\n\n    clearInterval(this._artifacts._timer);\n    window.removeEventListener('resize', this._artifacts.resize);\n    window.removeEventListener('scroll', this._artifacts.scroll, true);\n\n  };\n\n  /**\n   * Registers a handler for a given configuration\n   *\n   * @param {object} config\n   * @param {object} [config.percentages]\n   * @param {number[]} [config.percentages.each] tracks every 100 / n percentage\n   * @param {number[]} [config.percentages.every] tracks each percentage once\n   * @param {object} [config.pixels]\n   * @param {number[]} [config.pixels.each] tracks every context.height() / n pixel depth\n   * @param {number[]} [config.pixels.every] tracks each pixel depth once\n   * @param {object} [config.elements]\n   * @param {string[]} [config.elements.each] tracks every element that matches each selector\n   * @param {string[]} [config.elements.every] tracks the first element that matches each selector\n   * @param {function} handler\n   */\n  ScrollTracker.prototype.on = function(config, handler) {\n\n    var _config = this._config;\n\n    ['percentages', 'pixels', 'elements'].forEach(function(type) {\n\n      if (!config[type]) return;\n\n      ['each', 'every'].forEach(function(freq) {\n\n        if (!config[type][freq]) return;\n\n        config[type][freq].forEach(function(key) {\n\n          _config[type][freq][key] = _config[type][freq][key] || [];\n          _config[type][freq][key].push(handler);\n\n        });\n\n      });\n\n    });\n\n    this._update();\n\n  };\n\n  /**\n   * Checks marks and depth\n   */\n  ScrollTracker.prototype._update = function() {\n\n    this._calculateMarks();\n    this._checkDepth();\n\n  };\n\n  /**\n   * Calculates the pixels for all configs\n   */\n  ScrollTracker.prototype._calculateMarks = function() {\n\n    delete this._marks;\n    this._fromTop = getNodeDistanceFromTop(this._context);\n    this._marks = {};\n\n    var _config = this._config;\n    var contextHeight = this._contextHeight();\n    var addMark = this._addMark.bind(this);\n    var self = this;\n    var elements,\n      element,\n      depth,\n      key;\n\n    if (contextHeight < this.minHeight) return;\n\n    for (key in _config.percentages.every) {\n\n      forEachIn({\n        n: Number(key),\n        numerator: 100,\n        callback: percentagesEveryCallback(_config.percentages.every[key])\n      });\n\n    }\n\n    for (key in _config.pixels.every) {\n\n      forEachIn({\n        n: Number(key),\n        numerator: contextHeight,\n        callback: pixelsEveryCallback(_config.pixels.every[key])\n      });\n\n    }\n\n    for (key in _config.percentages.each) {\n\n      depth = Math.floor(contextHeight * Number(key) / 100);\n\n      addMark({\n        label: key + '%',\n        depth: depth,\n        handlers: _config.percentages.each[key]\n      });\n\n    }\n\n    for (key in _config.pixels.each) {\n\n      depth = Number(key);\n\n      addMark({\n        label: key + 'px',\n        depth: depth,\n        handlers: _config.pixels.each[key]\n      });\n\n    }\n\n    for (key in _config.elements.every) {\n\n      elements = [].slice.call(this._context.querySelectorAll(key));\n\n      if (elements.length) {\n\n        elements.forEach(elementsEveryCallback(key, _config.elements.every[key]));\n\n      }\n\n    }\n\n    for (key in _config.elements.each) {\n\n      element = this._context.querySelector(key);\n\n      if (element) {\n\n        depth = element.getBoundingClientRect().top -\n          self._context.getBoundingClientRect().top;\n\n        addMark({\n          label: key,\n          depth: depth,\n          handlers: _config.elements.each[key]\n        });\n\n      }\n\n    }\n\n    /**\n     * Callback for our everyElements iterations\n     *\n     * @param {string} key\n     * @param {function[]} handlers\n     *\n     * @returns {everyElement~Callback}\n     */\n    function elementsEveryCallback(key, handlers) {\n\n      /**\n       * @callback everyElement~Callback\n       *\n       * @param {HTMLElement} element\n       * @param {number} ind\n       */\n      return function(element, ind) {\n\n        var depth = element.getBoundingClientRect().top -\n           self._context.getBoundingClientRect().top;\n\n        addMark({\n          label: key + '[' + ind + ']',\n          depth: depth,\n          handlers: _config.elements.every[key]\n        });\n\n      };\n\n    }\n\n\n    /**\n     * Builds a callback for our everyPercentages iterations\n     *\n     * @param {function[]} handlers\n     *\n     * @returns {everyPercentage~Callback}\n     */\n     function percentagesEveryCallback(handlers) {\n\n       /**\n        * @callback everyPercentage~Callback\n        *\n        * @param {number} n\n        */\n       return function(n) {\n\n        var depth = Math.floor(n * contextHeight / 100);\n\n        addMark({\n          label: String(n) + '%',\n          depth: depth,\n          handlers: _config.percentages.every[key]\n        });\n\n      };\n\n    }\n\n    /**\n     * Builds a callback for our everyPixels iterations\n     *\n     * @param {function[]} handlers\n     *\n     * @param {number} n\n     */\n\n    function pixelsEveryCallback(handlers) {\n\n      /**\n       * @callback everyPixel~Callback\n       *\n       * @param {function[]} handlers\n       */\n      return function(n) {\n\n        var depth = n;\n\n        addMark({\n          label: String(depth) + 'px',\n          depth: depth,\n          handlers: handlers\n        });\n\n      };\n\n    }\n\n  };\n\n  /**\n   * Checks all marks and triggers appropriate handlers\n   */\n  ScrollTracker.prototype._checkDepth = function() {\n\n    var marks = this._marks;\n    var currentDepth = this._currentDepth();\n    var key;\n\n    for (key in marks) {\n\n      if (currentDepth >= key && !this._tracked[key]) {\n\n        marks[key].forEach(function(boundHandler) {\n          boundHandler();\n        });\n\n        this._tracked[key] = true;\n\n      }\n\n    }\n\n  };\n\n  /**\n   * Resets the internal cache of tracked marks\n   */\n  ScrollTracker.prototype.reset = function() {\n\n    this._tracked = {};\n    delete this._marks;\n    this.marks = {};\n\n  };\n\n  /**\n   * Returns the height of the scrolling context\n   *\n   * @returns {number}\n   */\n  ScrollTracker.prototype._contextHeight = function() {\n\n    if (this._context !== document.body) return this._context.scrollHeight - 5;\n\n    return this._context.clientHeight - 5;\n\n  };\n\n  /**\n   * Returns the current depth we've scrolled into the context\n   *\n   * @returns {number}\n   */\n  ScrollTracker.prototype._currentDepth = function() {\n\n    var isVisible = visibleInViewport(this._context);\n    var depth;\n\n    if (!this._context.scrollTop) {\n\n      this._context.scrollTop = 1;\n\n      if (!this._context.scrollTop) {\n\n        depth = (window.pageYOffset ||\n          document.documentElement.scrollTop ||\n          document.body.scrollTop || 0);\n\n      } else {\n\n        this._context.scrollTop = 0;\n        depth = this._context.scrollTop + isVisible;\n\n      }\n\n    } else {\n\n      depth = this._context.scrollTop + isVisible;\n\n    }\n\n    if (!isVisible) {\n\n      return depth >= this._fromTop ? depth : -1;\n\n    }\n\n    return depth + isVisible;\n\n  };\n\n  /**\n   * Adds a mark to be tracked\n   *\n   * @param {object} config\n   * @param {number} config.depth\n   * @param {string} config.label\n   * @param {function[]} config.handlers\n   */\n  ScrollTracker.prototype._addMark = function(config) {\n\n    var depth = config.depth;\n\n    this._marks[depth] = (this._marks[depth] || []).concat(Mark(config));\n\n  };\n\n  /**\n   * @constructor\n   * @private\n   *\n   * @param {object} config\n   * @param {string} config.label\n   * @param {number} config.depth\n   * @param {function[]} config.handlers\n   *\n   * @returns {Mark}\n   */\n  function Mark(config) {\n\n    /**\n     * A Mark is an array of callbacks bound with their data payloads\n     *\n     * @name Mark\n     *\n     * @type {function[]}\n     */\n    return config.handlers.map(function(handler) {\n\n      return handler.bind(this, {\n        data: {\n          depth: config.depth,\n          label: config.label\n        }\n      });\n\n    });\n\n  }\n\n  /**\n   * Calls a callback function each time config.n goes into config.numerator\n   *\n   * @param {object} config\n   * @param {number} config.n\n   * @param {number} config.numerator\n   * @param {function} config.callback\n   */\n  function forEachIn(config) {\n\n    var len = Math.floor(config.numerator / config.n);\n    var i;\n\n    for (i = 1; i <= len; i++) {\n\n      config.callback(i * config.n);\n\n    }\n\n  }\n\n  /**\n   * Helper that watches for changes in the height of the document\n   */\n  function onDocHeightChange(handler) {\n\n    var documentHeight = docHeight();\n\n    return setInterval(function() {\n\n      if (docHeight() !== documentHeight) {\n\n        handler();\n        documentHeight = docHeight();\n\n      }\n\n    }, 500);\n\n  }\n\n  /**\n   * Returns the height of the document\n   *\n   * @returns {number}\n   */\n  function docHeight() {\n\n    var body = document.body;\n    var html = document.documentElement;\n\n    return Math.max(body.scrollHeight, body.offsetHeight,\n      html.clientHeight, html.scrollHeight, html.offsetHeight);\n\n  }\n\n  /**\n   * Returns the number of pixels of the element visible in the viewport\n   * @param {HTMLElement} element\n   *\n   * @returns {number}\n   * adapted from:\n   * @link https://stackoverflow.com/questions/24768795/get-the-visible-height-of-a-div-with-jquery#answer-26831113\n   */\n  function visibleInViewport(element) {\n\n    var height = element.offsetHeight;\n    var windowHeight = viewportHeight();\n    var rect = element.getBoundingClientRect();\n\n    return Math.max(\n      0,\n      rect.top > 0 ? Math.min(height, windowHeight - rect.top) :\n      (rect.bottom < windowHeight ? rect.bottom : windowHeight)\n    );\n\n  }\n\n  /**\n   * Returns the height of the viewport\n   *\n   * @returns {number}\n   */\n  function viewportHeight() {\n\n    var elem = (document.compatMode === \"CSS1Compat\") ?\n      document.documentElement :\n      document.body;\n\n    return elem.clientHeight;\n\n  }\n\n  /**\n   * Retrieves the distance of a node from the top of the document\n   *\n   * @param {HTMLElement} node\n   *\n   * @returns {number}\n   */\n  function getNodeDistanceFromTop(node) {\n\n    var nodeTop = node.getBoundingClientRect().top;\n    // @link https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollX\n    var docTop = (window.pageYOffset !== undefined) ?\n      window.pageYOffset :\n      (document.documentElement || document.body.parentNode || document.body).scrollTop;\n\n    return nodeTop + docTop;\n\n  }\n\n  /**\n   * Does nothing\n   */\n  function noop() {}\n\n  /**\n   * Throttle function borrowed from:\n   * Underscore.js 1.5.2\n   * http://underscorejs.org\n   * (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n   * Underscore may be freely distributed under the MIT license.\n   */\n  function throttle(func, wait) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    var later = function() {\n      previous = new Date;\n      timeout = null;\n      result = func.apply(context, args);\n    };\n    return function() {\n      var now = new Date;\n      if (!previous) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Installs a noop'd version of ScrollTracker on the window\n   */\n  function installMock() {\n\n    var fake = {};\n    var key;\n\n    for (key in ScrollTracker) {\n\n      fake[key] = noop;\n\n    }\n\n    window.ScrollTracker = fake;\n\n  }\n\n  window.ScrollTracker = ScrollTracker;\n\n})(this);\n/*\n * v2.0.1\n * Created by the Google Analytics consultants at http://www.lunametrics.com/\n * Written by @notdanwilkerson\n * Documentation: https://github.com/lunametrics/gascroll/\n * Licensed under the MIT License\n */\n/*\n * This section of the code handles setting up scroll tracking for GTM\n */\n(function(window) {\n  \n  if (document.readyState !== 'loading') {\n\n    init();\n\n  } else {\n\n    document.addEventListener('DOMContentLoaded', init);\n\n  }\n\n  function init() {\n\n    var tracker = window.ScrollTracker();\n\n    tracker.on({\n      percentages: {\n      \teach: [10 ,90],\n        every: [25]\n      }\n    }, function(evt) {\n  \n      dataLayer.push({\n        'event': 'scrollTracking',\n        'attributes': {\n          'distance': evt.data.depth,\n          'label': evt.data.label\n        }\n      });\n\n    });\n    \n    delete window.ScrollTracker;\n        \n  }\n  \n})(window);\n</script>"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1506534303431",
                "firingTriggerId": [
                    "2147479553"
                ],
                "parentFolderId": "26",
                "tagFiringOption": "ONCE_PER_EVENT"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "28",
                "name": "CU - YouTube Tracking - LunaMetrics Plugin",
                "type": "html",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "html",
                        "value": "<script type=\"text/javascript\" id=\"gtm-youtube-tracking\">\n(function(document, window, config) {\n\n  'use strict';\n\t// This script won't work on IE 6 or 7, so we bail at this point if we detect that UA\n\tif (navigator.userAgent.match(/MSIE [67]\\./gi)) return;\n\n  var _config = config || {};\n  var forceSyntax = _config.forceSyntax || 0;\n  var dataLayerName = _config.dataLayerName || 'dataLayer';\n  // Default configuration for events\n  var eventsFired = {\n    'Play': true,\n    'Pause': true,\n    'Watch to End': true\n  };\n\tvar firstScriptTag;\n\tvar tag;\n  var key;\n\n  for (key in _config.events) {\n\n    if (_config.events.hasOwnProperty(key)) {\n\n      eventsFired[key] = _config.events[key];\n\n    }\n\n  }\n\n\tif (window.YT) {\n\n\t\tinit();\t\n\n\t} else {\n\n\t\t// Fetches YouTube JS API\n\t\ttag = document.createElement('script');\n\t\ttag.src = '//www.youtube.com/iframe_api';\n\t\tfirstScriptTag = document.getElementsByTagName('script')[0];\n\t\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n\t\twindow.onYouTubeIframeAPIReady = (function(o) {\n\n\t\t\treturn function() {\n\n\t\t\t\tif (o) o.apply(this, arguments);\n\n\t\t\t\tinit();\n\n\t\t\t};\t\n\n\t\t})(window.onYouTubeIframeAPIReady);\n\n\t}\n\n  // Invoked by the YouTube API when it's ready\n  function init() {\n\n\t\tif (document.readyState !== 'loading') {\n\n\t\t\tbind();\n\n\t\t} else {\n\n\t\t\t// On IE8 this fires on window.load, all other browsers will fire when DOM ready\n\t\t\tif ('addEventListener' in document) {\n\n\t\t\t\taddEvent(document, 'DOMContentLoaded', bind);\n\n\t\t\t} else {\n\n\t\t\t\taddEvent(window, 'load', bind);\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n\tfunction bind() {\n\n    var potentialVideos = getTagsAsArr_('iframe').concat(getTagsAsArr_('embed'));\n    digestPotentialVideos(potentialVideos);\n\n    // Will bind to dynamically added videos\n    if ('addEventListener' in document) { \n      document.addEventListener('load', bindToNewVideos_, true);\n    }\n\n\t}\n\n  // Take our videos and turn them into trackable videos with events\n  function digestPotentialVideos(potentialVideos) {\n\n    var i;\n\n    for (i = 0; i < potentialVideos.length; i++) {\n\n      var isYouTubeVideo = checkIfYouTubeVideo(potentialVideos[i]);\n\n      if (isYouTubeVideo) {\n\n        var normalizedYouTubeIframe = normalizeYouTubeIframe(potentialVideos[i]);\n        addYouTubeEvents(normalizedYouTubeIframe);\n\n      }\n\n    }\n\n  }\n\n  // Determine if the element is a YouTube video or not\n  function checkIfYouTubeVideo(potentialYouTubeVideo) {\n\n    var potentialYouTubeVideoSrc = potentialYouTubeVideo.src || '';\n\n    if (potentialYouTubeVideoSrc.indexOf('youtube.com/embed/') > -1 ||\n      potentialYouTubeVideoSrc.indexOf('youtube.com/v/') > -1) {\n\n      return true;\n\n    }\n\n    return false;\n\n  }\n\n  function jsApiEnabled(url) {\n\n    return url.indexOf('enablejsapi') > -1;\n\n  }\n\n  function originEnabled(url) {\n\n    return url.indexOf('origin') > -1;\n\n  }\n\n  // Turn embed objects into iframe objects and ensure they have the right parameters\n  function normalizeYouTubeIframe(youTubeVideo) {\n\n    var loc = window.location;\n    var a = document.createElement('a');\n    a.href = youTubeVideo.src;\n    a.hostname = 'www.youtube.com';\n    a.protocol = loc.protocol;\n    var tmpPathname = a.pathname.charAt(0) === '/' ? a.pathname : '/' + a.pathname; // IE10 shim\n\n    // For security reasons, YouTube wants an origin parameter set that matches our hostname\n\n    if (!jsApiEnabled(a.search)) {\n\n      a.search = (a.search.length > 0 ? a.search + '&' : '') + 'enablejsapi=1';\n\n    }\n\n    if (!originEnabled(a.search) && loc.hostname.indexOf('localhost') === -1) {\n    \n      var port = loc.port ?  ':' + loc.port : '';\n      var origin = loc.protocol + '%2F%2F' + loc.hostname + port;\n\n      a.search = a.search + '&origin=' + origin;\n\n    }\n\n    if (youTubeVideo.type === 'application/x-shockwave-flash') {\n\n      var newIframe = document.createElement('iframe');\n      newIframe.height = youTubeVideo.height;\n      newIframe.width = youTubeVideo.width;\n      tmpPathname = tmpPathname.replace('/v/', '/embed/');\n\n      youTubeVideo.parentNode.parentNode.replaceChild(newIframe, youTubeVideo.parentNode);\n\n      youTubeVideo = newIframe;\n\n    }\n\n    a.pathname = tmpPathname;\n\n    if (youTubeVideo.src !== a.href + a.hash) {\n\n      youTubeVideo.src = a.href + a.hash;\n\n    }\n\n    return youTubeVideo;\n\n  }\n\n  // Add event handlers for events emitted by the YouTube API\n  function addYouTubeEvents(youTubeIframe) {\n\n    var player = YT.get(youTubeIframe.id);\n\n    if (!player) {\n\n      player = new YT.Player(youTubeIframe, {}); \n\n    }\n\n    if (typeof youTubeIframe.pauseFlag === 'undefined') { \n\n      youTubeIframe.pauseFlag = false;\n      player.addEventListener('onStateChange', function(evt) {\n\n        onStateChangeHandler(evt, youTubeIframe);\n\n      });\n\n    }\n\n  }\n\n  // Returns key/value pairs of percentages: number of seconds to achieve\n  function getMarks(duration) {\n\n    var marks = {};\n\n    // For full support, we're handling Watch to End with percentage viewed\n    if (_config.events['Watch to End']) {\n\n      marks['Watch to End'] = Math.min(duration - 3, Math.floor(duration * 0.99));\n\n    }\n\n    if (_config.percentageTracking) {\n\n      var points = [];\n      var i;\n\n      if (_config.percentageTracking.each) {\n\n        points = points.concat(_config.percentageTracking.each);\n\n      }\n\n      if (_config.percentageTracking.every) {\n\n        var every = parseInt(_config.percentageTracking.every, 10);\n        var num = 100 / every;\n\n        for (i = 1; i < num; i++) {\n\n          points.push(i * every);\n\n        }\n\n      }\n\n      for (i = 0; i < points.length; i++) {\n\n        var _point = points[i];\n        var _mark = _point + '%';\n        var _time = duration * _point / 100;\n\n        marks[_mark] = Math.floor(_time);\n\n      }\n\n    }\n\n    return marks;\n\n  }\n\n  function checkCompletion(player, marks, videoId) {\n\n    var currentTime = player.getCurrentTime();\n    var key;\n\n    player[videoId] = player[videoId] || {};\n\n    for (key in marks) {\n\n      if (marks[key] <= currentTime && !player[videoId][key]) {\n\n        player[videoId][key] = true;\n        fireAnalyticsEvent(videoId, key);\n\n      }\n\n    }\n\n  }\n\n  // Event handler for events emitted from the YouTube API\n  function onStateChangeHandler(evt, youTubeIframe) {\n\n    var stateIndex = evt.data;\n    var player = evt.target;\n    var targetVideoUrl = player.getVideoUrl();\n    var targetVideoId = targetVideoUrl.match(/[?&]v=([^&#]*)/)[1]; // Extract the ID    \n    var playerState = player.getPlayerState();\n    var duration = Math.floor(player.getDuration());\n    var marks = getMarks(duration);\n    var playerStatesIndex = {\n      '1': 'Play',\n      '2': 'Pause'\n    };\n    var state = playerStatesIndex[stateIndex];\n\n    youTubeIframe.playTracker = youTubeIframe.playTracker || {};\n\n    if (playerState === 1 && !youTubeIframe.timer) {\n\n      clearInterval(youTubeIframe.timer);\n\n      youTubeIframe.timer = setInterval(function() {\n\n        // Check every second to see if we've hit any of our percentage viewed marks\n        checkCompletion(player, marks, youTubeIframe.videoId);\n\n      }, 1000);\n\n    } else {\n\n      clearInterval(youTubeIframe.timer);\n      youTubeIframe.timer = false;\n\n    }\n\n    // Playlist edge-case handler\n    if (stateIndex === 1) {\n\n      youTubeIframe.playTracker[targetVideoId] = true;\n      youTubeIframe.videoId = targetVideoId;\n      youTubeIframe.pauseFlag = false;\n\n    }\n\n    if (!youTubeIframe.playTracker[youTubeIframe.videoId]) {\n\n      // This video hasn't started yet, so this is spam\n      return false;\n\n    }\n\n    if (stateIndex === 2) {\n\n      if (!youTubeIframe.pauseFlag) {\n\n        youTubeIframe.pauseFlag = true;\n\n      } else {\n\n        // We don't want to fire consecutive pause events\n        return false;\n\n      }\n\n    }\n\n    // If we're meant to track this event, fire it\n    if (eventsFired[state]) {\n\n      fireAnalyticsEvent(youTubeIframe.videoId, state);\n\n    }\n\n  }\n\n  // Fire an event to Google Analytics or Google Tag Manager\n  function fireAnalyticsEvent(videoId, state) {\n\n    var videoUrl = 'https://www.youtube.com/watch?v=' + videoId;\n    var _ga = window.GoogleAnalyticsObject;\n\n    if (typeof window[dataLayerName] !== 'undefined' && !_config.forceSyntax) {\n\n      window[dataLayerName].push({\n\n        'event': 'youTubeTrack',\n        'attributes': {\n\n          'videoUrl': videoUrl,\n          'videoAction': state\n\n        }\n\n      });\n\n    } else if (typeof window[_ga] === 'function' &&\n      typeof window[_ga].getAll === 'function' &&\n      _config.forceSyntax !== 2) {\n\n      window[_ga]('send', 'event', 'Videos', state, videoUrl);\n\n    } else if (typeof window._gaq !== 'undefined' && forceSyntax !== 1) {\n\n      window._gaq.push(['_trackEvent', 'Videos', state, videoUrl]);\n\n    }\n\n  }\n\n  // Simple cross-browser event listener\n  function addEvent(el, name, fn) {\n\n    if (el.addEventListener) {\n\n      el.addEventListener(name, fn);\n\n    } else if (el.attachEvent) {\n\n      el.attachEvent('on' + name, function(evt) {\n\n        evt.target = evt.target || evt.srcElement;\n        // Call the event to ensure uniform 'this' handling, pass it event\n        fn.call(el, evt);\n\n      });\n\n    } else if (typeof el['on' + name] === 'undefined' || el['on' + name] === null) {\n\n\n      el['on' + name] = function(evt) {\n\n        evt.target = evt.target || evt.srcElement;\n        // Call the event to ensure uniform 'this' handling, pass it event\n        fn.call(el, evt);\n\n      };\n\n    }\n\n  }\n\n  // Returns array of elements with given tag name\n  function getTagsAsArr_(tagName) {\n\n    return [].slice.call(document.getElementsByTagName(tagName));\n\n  }\n\n  function bindToNewVideos_(evt) {\n\n    var el = evt.target || evt.srcElement;\n    var isYT = checkIfYouTubeVideo(el);\n\n    // We only bind to iframes with a YouTube URL with the enablejsapi=1 and \n    // origin=<<hostname>> parameters\n    if (el.tagName === 'IFRAME' && isYT && jsApiEnabled(el.src) && originEnabled(el.src)) {\n\n      addYouTubeEvents(el);\n\n    }\n\n  }\n\n})(document, window, {\n  'events': {\n    'Play': true,\n    'Pause': true,\n    'Watch to End': true\n  },\n  'percentageTracking': {\n    'every': 25,\n    'each': [10, 90]\n  }\n});\n/*\n * Configuration Details\n *\n * @property events object\n * Defines which events emitted by YouTube API\n * will be turned into Google Analytics or GTM events\n *\n * @property percentageTracking object\n * Object with configurations for percentage viewed events\n *\n *   @property each array\n *   Fires an event once each percentage ahs been reached\n *\n *   @property every number\n *   Fires an event for every n% viewed\n *\n * @property forceSyntax int 0, 1, or 2\n * Forces script to use Classic (2) or Universal(1)\n *\n * @property dataLayerName string\n * Tells script to use custom dataLayer name instead of default\n */\n/*\n * v8.1.4\n * Created by the Google Analytics consultants at http://www.lunametrics.com\n * Written by @SayfSharif and @notdanwilkerson\n * Documentation: https://github.com/lunametrics/youtube-google-analytics/\n * Licensed under the Creative Commons 4.0 Attribution Public License\n */\n</script>"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "supportDocumentWrite",
                        "value": "false"
                    }
                ],
                "fingerprint": "1508853601915",
                "firingTriggerId": [
                    "2147479553"
                ],
                "parentFolderId": "27",
                "tagFiringOption": "ONCE_PER_EVENT"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "20",
                "name": "GA - Event - Contact Link Clicks",
                "type": "ua",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "nonInteraction",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "useDebugVersion",
                        "value": "{{Debug Mode}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventCategory",
                        "value": "Contact Link Click"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_EVENT"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventLabel",
                        "value": "{{Click URL - No Protocol}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventAction",
                        "value": "{{Lookup - Link Type}}"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "overrideGaSettings",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setTrackerName",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "false"
                    },
                    {
                        "type": "LIST",
                        "key": "fieldsToSet",
                        "list": [
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "fieldName",
                                        "value": "cookieDomain"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "value",
                                        "value": "auto"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableEcommerce",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "{{YOUR_GA_TRACKING_ID}}"
                    }
                ],
                "fingerprint": "1462238353000",
                "firingTriggerId": [
                    "33"
                ],
                "parentFolderId": "21",
                "tagFiringOption": "ONCE_PER_EVENT"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "22",
                "name": "GA - Event - File Download",
                "type": "ua",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "nonInteraction",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "useDebugVersion",
                        "value": "{{Debug Mode}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventCategory",
                        "value": "File Downloads"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_EVENT"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventLabel",
                        "value": "{{Click Filename}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventAction",
                        "value": "{{Click File Extension}}"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "overrideGaSettings",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setTrackerName",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "false"
                    },
                    {
                        "type": "LIST",
                        "key": "fieldsToSet",
                        "list": [
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "fieldName",
                                        "value": "cookieDomain"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "value",
                                        "value": "auto"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableEcommerce",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "{{YOUR_GA_TRACKING_ID}}"
                    }
                ],
                "fingerprint": "1462238353002",
                "firingTriggerId": [
                    "34"
                ],
                "parentFolderId": "24",
                "tagFiringOption": "ONCE_PER_EVENT"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "23",
                "name": "GA - Event - Outbound Link Click",
                "type": "ua",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "nonInteraction",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "useDebugVersion",
                        "value": "{{Debug Mode}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventCategory",
                        "value": "Outbound Link Click"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_EVENT"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventLabel",
                        "value": "{{Click URL}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventAction",
                        "value": "{{Click Hostname}}"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "overrideGaSettings",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setTrackerName",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "false"
                    },
                    {
                        "type": "LIST",
                        "key": "fieldsToSet",
                        "list": [
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "fieldName",
                                        "value": "cookieDomain"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "value",
                                        "value": "auto"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableEcommerce",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "{{YOUR_GA_TRACKING_ID}}"
                    }
                ],
                "fingerprint": "1462238353004",
                "firingTriggerId": [
                    "35"
                ],
                "parentFolderId": "25",
                "tagFiringOption": "ONCE_PER_EVENT"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "31",
                "name": "GA - Event - Scroll Tracking",
                "type": "ua",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "nonInteraction",
                        "value": "true"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "useDebugVersion",
                        "value": "{{Debug Mode}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventCategory",
                        "value": "Scroll Tracking"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_EVENT"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventLabel",
                        "value": "{{DLV - attributes.label}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventAction",
                        "value": "{{DLV - attributes.distance}}"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "overrideGaSettings",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setTrackerName",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "false"
                    },
                    {
                        "type": "LIST",
                        "key": "fieldsToSet",
                        "list": [
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "fieldName",
                                        "value": "cookieDomain"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "value",
                                        "value": "auto"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableEcommerce",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "{{YOUR_GA_TRACKING_ID}}"
                    }
                ],
                "fingerprint": "1494007095493",
                "firingTriggerId": [
                    "41"
                ],
                "parentFolderId": "26",
                "tagFiringOption": "ONCE_PER_EVENT"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "29",
                "name": "GA - Event - YouTube Tracking",
                "type": "ua",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "nonInteraction",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "useDebugVersion",
                        "value": "{{Debug Mode}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventCategory",
                        "value": "Videos"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_EVENT"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventLabel",
                        "value": "{{DLV - attributes.videoUrl}}"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "eventAction",
                        "value": "{{DLV - attributes.videoAction}}"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "overrideGaSettings",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setTrackerName",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "false"
                    },
                    {
                        "type": "LIST",
                        "key": "fieldsToSet",
                        "list": [
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "fieldName",
                                        "value": "cookieDomain"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "value",
                                        "value": "auto"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableEcommerce",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "{{YOUR_GA_TRACKING_ID}}"
                    }
                ],
                "fingerprint": "1508853601918",
                "firingTriggerId": [
                    "40"
                ],
                "parentFolderId": "27",
                "tagFiringOption": "ONCE_PER_EVENT"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "tagId": "26",
                "name": "GA - Pageview - All Pages",
                "type": "ua",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "overrideGaSettings",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setTrackerName",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "doubleClick",
                        "value": "false"
                    },
                    {
                        "type": "LIST",
                        "key": "fieldsToSet",
                        "list": [
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "fieldName",
                                        "value": "cookieDomain"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "value",
                                        "value": "auto"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "useDebugVersion",
                        "value": "{{Debug Mode}}"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "useHashAutoLink",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackType",
                        "value": "TRACK_PAGEVIEW"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "decorateFormsAutoLink",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableLinkId",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "enableEcommerce",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "trackingId",
                        "value": "{{YOUR_GA_TRACKING_ID}}"
                    }
                ],
                "fingerprint": "1462238353007",
                "firingTriggerId": [
                    "2147479553"
                ],
                "tagFiringOption": "ONCE_PER_EVENT"
            }
        ],
        "trigger": [
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "triggerId": "29",
                "name": "Event - Remove Cookie",
                "type": "CUSTOM_EVENT",
                "customEventFilter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{_event}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "removeCookie"
                            }
                        ]
                    }
                ],
                "fingerprint": "1462238352974",
                "parentFolderId": "22"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "triggerId": "41",
                "name": "Event - Scroll Tracking",
                "type": "CUSTOM_EVENT",
                "customEventFilter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{_event}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "scrollTracking"
                            }
                        ]
                    }
                ],
                "fingerprint": "1494007095483",
                "parentFolderId": "26"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "triggerId": "31",
                "name": "Event - Set Cookie",
                "type": "CUSTOM_EVENT",
                "customEventFilter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{_event}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "setCookie"
                            }
                        ]
                    }
                ],
                "fingerprint": "1462238352974",
                "parentFolderId": "22"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "triggerId": "40",
                "name": "Event - YouTube Tracking",
                "type": "CUSTOM_EVENT",
                "customEventFilter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{_event}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "youTubeTrack"
                            }
                        ]
                    }
                ],
                "fingerprint": "1494006445883",
                "parentFolderId": "27"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "triggerId": "33",
                "name": "Link Click - 'tel' Or 'mailto' Protocol",
                "type": "LINK_CLICK",
                "filter": [
                    {
                        "type": "MATCH_REGEX",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{Click Protocol}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "mailto|tel"
                            },
                            {
                                "type": "BOOLEAN",
                                "key": "ignore_case",
                                "value": "true"
                            }
                        ]
                    }
                ],
                "autoEventFilter": [
                    {
                        "type": "MATCH_REGEX",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{Page URL}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": ".*"
                            },
                            {
                                "type": "BOOLEAN",
                                "key": "ignore_case",
                                "value": "true"
                            }
                        ]
                    }
                ],
                "waitForTags": {
                    "type": "BOOLEAN",
                    "value": "true"
                },
                "checkValidation": {
                    "type": "BOOLEAN",
                    "value": "false"
                },
                "waitForTagsTimeout": {
                    "type": "TEMPLATE",
                    "value": "2000"
                },
                "uniqueTriggerId": {
                    "type": "TEMPLATE"
                },
                "fingerprint": "1462238352976",
                "parentFolderId": "21"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "triggerId": "34",
                "name": "Link Click - File Extension Is PDF, XLS, DOC, or TXT",
                "type": "LINK_CLICK",
                "filter": [
                    {
                        "type": "MATCH_REGEX",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{Click File Extension}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "pdf|docx?|xlsx?|txt"
                            },
                            {
                                "type": "BOOLEAN",
                                "key": "ignore_case",
                                "value": "true"
                            }
                        ]
                    }
                ],
                "autoEventFilter": [
                    {
                        "type": "MATCH_REGEX",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{Page URL}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": ".*"
                            }
                        ]
                    }
                ],
                "waitForTags": {
                    "type": "BOOLEAN",
                    "value": "true"
                },
                "checkValidation": {
                    "type": "BOOLEAN",
                    "value": "false"
                },
                "waitForTagsTimeout": {
                    "type": "TEMPLATE",
                    "value": "2000"
                },
                "uniqueTriggerId": {
                    "type": "TEMPLATE"
                },
                "fingerprint": "1462238352977",
                "parentFolderId": "24"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "triggerId": "35",
                "name": "Link Click - Outbound Link",
                "type": "LINK_CLICK",
                "filter": [
                    {
                        "type": "EQUALS",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{JS - Is Outbound Click URL}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": "true"
                            }
                        ]
                    }
                ],
                "autoEventFilter": [
                    {
                        "type": "MATCH_REGEX",
                        "parameter": [
                            {
                                "type": "TEMPLATE",
                                "key": "arg0",
                                "value": "{{Page URL}}"
                            },
                            {
                                "type": "TEMPLATE",
                                "key": "arg1",
                                "value": ".*"
                            }
                        ]
                    }
                ],
                "waitForTags": {
                    "type": "BOOLEAN",
                    "value": "true"
                },
                "checkValidation": {
                    "type": "BOOLEAN",
                    "value": "false"
                },
                "waitForTagsTimeout": {
                    "type": "TEMPLATE",
                    "value": "2000"
                },
                "uniqueTriggerId": {
                    "type": "TEMPLATE"
                },
                "fingerprint": "1462238352979",
                "parentFolderId": "25"
            }
        ],
        "variable": [
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "41",
                "name": "Click File Extension",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function() {\n  \n  try {\n    \n    var e = {{Click Element}}.pathname.split('.');\n    \n    return e.length > 1 ? e.pop().toUpperCase() : 'HTML';\n  \n  } catch(e) {}\n\n}"
                    }
                ],
                "fingerprint": "1462238352976",
                "parentFolderId": "24"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "58",
                "name": "Click Filename",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function() {\n  \n  try {\n    \n    return {{Click Element}}.pathname.split('/').pop();\n    \n  } catch(e) {}\n  \n}"
                    }
                ],
                "fingerprint": "1462238352987",
                "parentFolderId": "24"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "42",
                "name": "Click Hostname",
                "type": "aev",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "stripWww",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "component",
                        "value": "HOST"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "varType",
                        "value": "URL"
                    }
                ],
                "fingerprint": "1462238352978",
                "parentFolderId": "25"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "40",
                "name": "Click Protocol",
                "type": "aev",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "component",
                        "value": "PROTOCOL"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "varType",
                        "value": "URL"
                    }
                ],
                "fingerprint": "1462238352975",
                "parentFolderId": "21"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "59",
                "name": "Click URL - No Protocol",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function() {\n  \n  if ({{Click URL}}) {\n   \n    return {{Click URL}}.split(':')[1];\n    \n  }\n  \n}"
                    }
                ],
                "fingerprint": "1462238352988",
                "parentFolderId": "21"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "90",
                "name": "DLV - attributes - v1",
                "type": "v",
                "parameter": [
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "1"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes"
                    }
                ],
                "fingerprint": "1502395572476",
                "parentFolderId": "22"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "77",
                "name": "DLV - attributes.contentType",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.contentType"
                    }
                ],
                "fingerprint": "1494008053860",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "75",
                "name": "DLV - attributes.distance",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.distance"
                    }
                ],
                "fingerprint": "1494007095483",
                "parentFolderId": "26"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "78",
                "name": "DLV - attributes.fragment",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.fragment"
                    }
                ],
                "fingerprint": "1494008053860",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "79",
                "name": "DLV - attributes.headers",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.headers"
                    }
                ],
                "fingerprint": "1494008053861",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "80",
                "name": "DLV - attributes.hostname",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.hostname"
                    }
                ],
                "fingerprint": "1494008053862",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "76",
                "name": "DLV - attributes.label",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.label"
                    }
                ],
                "fingerprint": "1494007095484",
                "parentFolderId": "26"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "81",
                "name": "DLV - attributes.pathname",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.pathname"
                    }
                ],
                "fingerprint": "1494008053863",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "82",
                "name": "DLV - attributes.protocol",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.protocol"
                    }
                ],
                "fingerprint": "1494008053863",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "83",
                "name": "DLV - attributes.queryParameters",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.queryParameters"
                    }
                ],
                "fingerprint": "1494008053864",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "84",
                "name": "DLV - attributes.response",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.response"
                    }
                ],
                "fingerprint": "1494008053865",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "85",
                "name": "DLV - attributes.statusCode",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.statusCode"
                    }
                ],
                "fingerprint": "1494008053865",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "86",
                "name": "DLV - attributes.statusText",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.statusText"
                    }
                ],
                "fingerprint": "1494008053866",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "87",
                "name": "DLV - attributes.timestamp",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.timestamp"
                    }
                ],
                "fingerprint": "1494008053867",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "88",
                "name": "DLV - attributes.type",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.type"
                    }
                ],
                "fingerprint": "1494008053868",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "89",
                "name": "DLV - attributes.url",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.url"
                    }
                ],
                "fingerprint": "1494008053869",
                "parentFolderId": "20"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "73",
                "name": "DLV - attributes.videoAction",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.videoAction"
                    }
                ],
                "fingerprint": "1494006445884",
                "parentFolderId": "27"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "74",
                "name": "DLV - attributes.videoUrl",
                "type": "v",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "INTEGER",
                        "key": "dataLayerVersion",
                        "value": "2"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "name",
                        "value": "attributes.videoUrl"
                    }
                ],
                "fingerprint": "1494006445885",
                "parentFolderId": "27"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "44",
                "name": "JS - Is Outbound Click URL",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function() {\n  \n  if ({{Click Hostname}}.indexOf({{Page Domain Name}}) === -1) {\n   \n    return true;\n    \n  }\n  \n  return false;\n  \n}"
                    }
                ],
                "fingerprint": "1494010190181",
                "parentFolderId": "25"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "67",
                "name": "Lookup - Link Type",
                "type": "smm",
                "parameter": [
                    {
                        "type": "BOOLEAN",
                        "key": "setDefaultValue",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "input",
                        "value": "{{Click Protocol}}"
                    },
                    {
                        "type": "LIST",
                        "key": "map",
                        "list": [
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "key",
                                        "value": "mailto"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "value",
                                        "value": "Email Link"
                                    }
                                ]
                            },
                            {
                                "type": "MAP",
                                "map": [
                                    {
                                        "type": "TEMPLATE",
                                        "key": "key",
                                        "value": "tel"
                                    },
                                    {
                                        "type": "TEMPLATE",
                                        "key": "value",
                                        "value": "Phone Number Link"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "fingerprint": "1494010197632",
                "parentFolderId": "21"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "43",
                "name": "Page Domain Name",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function() {\n  \n  return {{Page Hostname}}.match(/[^.]*\\.[^.]{2,3}(?:\\.[^.]{2,3})?$/)[0];\n\n}"
                    }
                ],
                "fingerprint": "1462238352978",
                "parentFolderId": "25"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "variableId": "72",
                "name": "YOUR_GA_TRACKING_ID",
                "type": "c",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "value",
                        "value": "UA-XXXXXX-YY"
                    }
                ],
                "fingerprint": "1462238352995"
            }
        ],
        "folder": [
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "folderId": "20",
                "name": "LunaMetrics AJAX Listener Plugin",
                "fingerprint": "1494008053858"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "folderId": "21",
                "name": "LunaMetrics Contact Link Clicks Plugin",
                "fingerprint": "1462238352970"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "folderId": "22",
                "name": "LunaMetrics Cookie Management Plugin",
                "fingerprint": "1462238352970"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "folderId": "23",
                "name": "LunaMetrics Engagement Timer Plugin",
                "fingerprint": "1462238352970"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "folderId": "24",
                "name": "LunaMetrics File Downloads Plugin",
                "fingerprint": "1462238352970"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "folderId": "25",
                "name": "LunaMetrics Outbound Link Clicks Plugin",
                "fingerprint": "1462238352971"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "folderId": "26",
                "name": "LunaMetrics Scroll Tracking Plugin",
                "fingerprint": "1462238352971"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "folderId": "27",
                "name": "LunaMetrics YouTube Tracking Plugin",
                "fingerprint": "1462238352971"
            }
        ],
        "builtInVariable": [
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "type": "PAGE_URL",
                "name": "Page URL"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "type": "PAGE_HOSTNAME",
                "name": "Page Hostname"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "type": "EVENT",
                "name": "Event"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "type": "CLICK_ELEMENT",
                "name": "Click Element"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "type": "CLICK_URL",
                "name": "Click URL"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "type": "DEBUG_MODE",
                "name": "Debug Mode"
            },
            {
                "accountId": "263956808",
                "containerId": "2187362",
                "type": "CONTAINER_ID",
                "name": "Container ID"
            }
        ],
        "fingerprint": "0",
        "tagManagerUrl": "https://tagmanager.google.com/#/versions/accounts/263956808/containers/2187362/versions/0?apiLink=version"
    }
}